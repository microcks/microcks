# Configure the log level.
quarkus.log.level=INFO
quarkus.log.console.level=INFO

# Access to Microcks API server.
io.github.microcks.minion.async.client.MicrocksAPIConnector/mp-rest/url=http://${MICROCKS_HOST_PORT:localhost:8080}

# Only supports WebSocket by default, but you can extend it.
minion.supported-bindings=WS${ASYNC_PROTOCOLS:}
minion.microcks-host-port=${MICROCKS_HOST_PORT:localhost:8080}

# Override microcks-services-updates reactive messaging channel
mp.messaging.incoming.microcks-services-updates.connector=quarkus-websocket
mp.messaging.incoming.microcks-services-updates.url=ws://${MICROCKS_HOST_PORT:localhost:8080}/
mp.messaging.incoming.microcks-services-updates.path=/api/services-updates

# Access to Kafka broker
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER:localhost:9092}

# Access to MQTT broker.
mqtt.server=${MQTT_SERVER:localhost:1883}
mqtt.username=${MQTT_USERNAME:microcks}
mqtt.password=${MQTT_PASSWORD:microcks}

# Access to RabbitMQ broker.
amqp.server=${AMQP_SERVER:localhost:5672}
amqp.username=${AMQP_USERNAME:microcks}
amqp.password=${AMQP_PASSWORD:microcks}

# Access to Amazon SQS
amazonsqs.region=${AWS_SQS_REGION:eu-west-3}
amazonsqs.credentials-type=env-variable
amazonsqs.endpoint-override=${AWS_SQS_ENDPOINT}

# Access to Amazon SNS
amazonsns.region=${AWS_SNS_REGION:eu-west-3}
amazonsns.credentials-type=env-variable
amazonsns.endpoint-override=${AWS_SNS_ENDPOINT}


# Configuration for native image build
quarkus.native.additional-build-args=\
  -H:IncludeLocales=en,\
  -H:IncludeResourceBundles=org.eclipse.paho.client.mqttv3.internal.nls.logcat\\,org.eclipse.paho.client.mqttv3.internal.nls.messages\\,org.eclipse.paho.client.mqttv3.logging.jsr47min,\
  -H:ReflectionConfigurationFiles=reflect-config.json,\
  -H:ResourceConfigurationFiles=resource-config.json,\
  --trace-object-instantiation=java.lang.Thread\\,java.util.Random\\,java.security.SecureRandom,\
  --initialize-at-run-time=io.github.microcks.util.el.function.AbstractRandomELFunction\\,io.nats.client.NUID\\,io.nats.client.support.SSLUtils\\,io.nats.client.support.RandomUtils\\,net.datafaker.service.RandomService\\,org.apache.hc.client5.http.impl.auth.NTLMEngineImpl,\
  --features=io.github.microcks.minions.async.config.RuntimeReflectionRegistrationFeature

quarkus.native.builder-image.pull=always
