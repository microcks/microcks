{{- if and (.Values.microcks.grpcEnableTLS) (not .Values.microcks.grpcSecretRef) }}
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-microcks-grpc-secret"
  labels:
    app: "{{ .Values.appName }}"
    group: microcks
type: kubernetes.io/tls
data:
{{ ( include "microcks-grpc.gen-certs" . ) | indent 2 }}
{{- end }}
{{- if and (.Values.ingresses) (not .Values.microcks.ingressSecretRef) (.Values.microcks.generateCert) }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-microcks-ingress-secret"
  labels:
    app: "{{ .Values.appName }}"
    group: microcks
type: kubernetes.io/tls
data:
{{ ( include "microcks-ingress.gen-certs" . ) | indent 2 }}
{{- end }}
{{- if and (.Values.mongodb.install) (not .Values.mongodb.secretRef) }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-mongodb-connection"
  labels:
    app: "{{ .Values.appName }}"
    container: mongodb
    group: microcks
    {{- include "microcks-common-labels" . | nindent 4 }}
  annotations:
    {{- include "microcks-common-annotations" . | nindent 4 }}
type: kubernetes.io/basic-auth
stringData:
  username: "{{ .Values.mongodb.username }}"
data:
  {{- if .Values.mongodb.password }}
  password: {{ .Values.mongodb.password | b64enc | quote }}
  {{- else }}
  password: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  adminUsername: {{ randAlphaNum 16 | b64enc | quote }}
  adminPassword: {{ randAlphaNum 40 | b64enc | quote }}
{{- end }}
{{- if and .Values.keycloak.enabled .Values.keycloak.install }}
{{- if and (.Values.ingresses) (not .Values.keycloak.ingressSecretRef) (.Values.keycloak.generateCert) }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak-ingress-secret"
  labels:
    app: "{{ .Values.appName }}"
    group: microcks
    {{- include "microcks-common-labels" . | nindent 4 }}
  annotations:
    {{- include "microcks-common-annotations" . | nindent 4 }}
type: kubernetes.io/tls
data:
{{ ( include "microcks.keycloak-ingress.gen-certs" . ) | indent 2 }}
{{- end }}
{{- if (not .Values.keycloak.secretRef) }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak-admin"
  labels:
    app: "{{ .Values.appName }}"
    container: keycloak
    group: microcks
type: kubernetes.io/basic-auth
stringData:
  username: "{{ .Values.keycloak.adminUsername }}"
  postgresUsername: "{{ .Values.keycloak.username }}"
data:
  {{- if .Values.keycloak.adminPassword }}
  password: {{ .Values.keycloak.adminPassword | b64enc | quote }}
  {{- else }}
  password: {{ randAlphaNum 40 | b64enc | quote }}
  {{- end }}
  {{- if .Values.keycloak.password }}
  postgresPassword: {{ .Values.keycloak.password | b64enc | quote }}
  {{- else }}
  postgresPassword: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
{{- end }}
{{- end }}
{{- if and (.Values.ingresses) (.Values.features.async.enabled) (not .Values.features.async.ws.ingressSecretRef) (.Values.features.async.ws.generateCert) }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-microcks-ws-ingress-secret"
  labels:
    app: "{{ .Values.appName }}"
    group: microcks
    {{- include "microcks-common-labels" . | nindent 4 }}
  annotations:
    {{- include "microcks-common-annotations" . | nindent 4 }}
type: kubernetes.io/tls
data:
{{ ( include "microcks-ws-ingress.gen-certs" . ) | indent 2 }}
{{- end }}
